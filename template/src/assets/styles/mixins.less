// 必须是不输出混合集，即无论有没有参数，都需要在混合集后面加括号。这样scoped样式引用的时候不会引入多余的代码。
@default-bd-color: #e8e8e8;

.row() {
    display: -webkit-box;
    display: -webkit-flex;
    display: -moz-box;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
}

.col() {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
    -moz-box-flex: 1;
    -moz-flex: 1;
    -ms-flex: 1;
    flex: 1;
    display: block;
    width: 100%;
}

.make-col(@percent) {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 @percent;
    -moz-box-flex: 0;
    -moz-flex: 0 0 @percent;
    -ms-flex: 0 0 @percent;
    flex: 0 0 @percent;
    max-width: @percent;
}

// 几个居中position默认用relative，受到文档流约束，如果不需要约束，可以传入absolute
// 水平居中
.h-center(@position: relative) {
    position: @position;
    left: 50%;
    transform: translate(-50%,0);
    transform-origin: 50% 50%;
}

// 垂直居中
.v-center(@position: relative){
    position: @position;
    top: 50%;
    transform: translate(0,-50%);
    transform-origin: 50% 50%;
}

// 水平、垂直居中
.hv-center(@position: relative) {
    position: @position;
    left: 50%;
    top: 50%;
    transform:translate(-50%,-50%);
    transform-origin: 50% 50%;
}

// 清除浮动
.clearfix() {
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}

// 内部方法，请勿引用
.border-1px-base() {
      position: relative;
      &::before, &::after {
          content: "";
          display: block;
          position: absolute;
      }
}

// 内部方法，请勿引用
.border-1px-tb-base() {
    @media(-webkit-device-pixel-ratio: 2), (min-resolution: 2dppx) {
        width: 200%;
        transform: scale(.5) translateZ(0);
    }
    @media(-webkit-device-pixel-ratio: 3), (min-resolution: 3dppx) {
        width: 300%;
        transform: scale(.333) translateZ(0);
    }
}

// 内部方法，请勿引用
.border-1px-lr-base() {
    @media(-webkit-device-pixel-ratio: 2), (min-resolution: 2dppx) {
        height: 200%;
        transform: scale(.5) translateZ(0);
    }
    @media(-webkit-device-pixel-ratio: 3), (min-resolution: 3dppx) {
        height: 300%;
        transform: scale(.333) translateZ(0);
    }
}

.border-1px(@color: @default-bd-color, @radius: 2px, @style: solid) {
    .border-1px-base();
    &::after {
        pointer-events: none;
        transform-origin: 0 0;
        left: 0;
        top: 0;
        border: 1px @style @color;
        border-radius: @radius;
        box-sizing: border-box;
        width: 100%;
        height: 100%;

        @media(-webkit-device-pixel-ratio: 2),(min-resolution: 2dppx){
            width: 200%;
            height: 200%;
            border-radius: @radius * 2;
            transform: scale(.5) translateZ(0);
        }
        @media(-webkit-device-pixel-ratio: 3),(min-resolution: 3dppx) {
            width: 300%;
            height: 300%;
            border-radius: @radius * 3;
            transform: scale(.333) translateZ(0);
        }
      }
}

// .border-top-1px 和 .border-left-1px 都是使用::before，所以无法公用，如果需要用到，可增加一个容器。.border-bottom-1px 和 .border-right-1px 同理
.border-top-1px(@color: @default-bd-color, @style: solid) {
    .border-1px-base();
    &::before {
        border-top: 1px @style @color;
        left: 0;
        top: 0;
        width: 100%;
        transform-origin: 0 top;
        .border-1px-tb-base();
    }
}

.border-bottom-1px(@color: @default-bd-color, @style: solid) {
    .border-1px-base();
    &::after {
        border-bottom: 1px @style @color;
        left: 0;
        bottom: 0;
        width: 100%;
        transform-origin: 0 bottom;
        .border-1px-tb-base();
    }
}

.border-left-1px(@color: @default-bd-color, @style: solid) {
    .border-1px-base();
    &::before {
        border-left: 1px @style @color;
        top: 0;
        left: 0;
        height: 100%;
        transform-origin: left 0;
        .border-1px-lr-base();
    }
}

.border-right-1px(@color: @default-bd-color, @style: solid) {
    .border-1px-base();
    &::after {
        border-right: 1px @style @color;
        top: 0;
        right: 0;
        height: 100%;
        transform-origin: right 0;
        .border-1px-lr-base();
    }
}
